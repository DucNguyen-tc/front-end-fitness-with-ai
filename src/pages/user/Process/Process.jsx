import React, { useState } from "react";
import {
  Box,
  Typography,
  Grid,
  Card,
  CardContent,
  Button,
  Snackbar,
  Alert,
  Stack,
  ToggleButtonGroup,
  ToggleButton,
} from "@mui/material";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from "recharts";

// Icons
import FitnessCenterIcon from '@mui/icons-material/FitnessCenter';
import MonitorWeightIcon from '@mui/icons-material/MonitorWeight';

const Process = () => {
  const [difficulty, setDifficulty] = useState("");
  const [openSnackbar, setOpenSnackbar] = useState(false);

  // D·ªØ li·ªáu m·∫´u (gi·ªØ nguy√™n)
  const weightData = [
    { week: "Tu·∫ßn 1", weight: 66 },
    { week: "Tu·∫ßn 2", weight: 65.3 },
    { week: "Tu·∫ßn 3", weight: 65 },
    { week: "Tu·∫ßn 4", weight: 64.5 },
  ];
  const calorieData = [
    { day: "T2", calo: 420 }, { day: "T3", calo: 500 }, { day: "T4", calo: 0 },
    { day: "T5", calo: 460 }, { day: "T6", calo: 550 }, { day: "T7", calo: 580 },
    { day: "CN", calo: 300 },
  ];

  const handleSubmit = () => {
    if (!difficulty) return;
    setOpenSnackbar(true);
  };

  return (
    <Box p={3} sx={{ backgroundColor: '#f9fafb', minHeight: '100vh' }}>
      <Typography variant="h4" gutterBottom fontWeight="bold">
        üìä B·∫£ng ƒëi·ªÅu khi·ªÉn ti·∫øn ƒë·ªô
      </Typography>
      
      {/* B·ªë c·ª•c Dashboard 2 c·ªôt */}
      <Grid container spacing={3}>
        {/* === C·ªôt ch√≠nh b√™n tr√°i (70% chi·ªÅu r·ªông) === */}
        <Grid size={{ xs: 12, lg: 8 }}>
          <Stack spacing={3}>
            {/* --- Panel C√¢n n·∫∑ng --- */}
            <Card sx={{ borderRadius: 4, boxShadow: 3 }}>
              <CardContent sx={{ p: 3 }}>
                <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                  <Box>
                    <Typography variant="h6" fontWeight="600">üìà Theo d√µi c√¢n n·∫∑ng</Typography>
                    <Typography variant="body2" color="text.secondary">Xu h∆∞·ªõng gi·∫£m ·ªïn ƒë·ªãnh</Typography>
                  </Box>
                  <Box textAlign="right">
                    <Typography variant="h4" fontWeight="bold" color="secondary.main">64.5 kg</Typography>
                    <Typography variant="body2" color="text.secondary">Hi·ªán t·∫°i</Typography>
                  </Box>
                </Box>
                <ResponsiveContainer width="100%" height={250}>
                  <LineChart data={weightData}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="week" />
                    <YAxis domain={[63, 67]} />
                    <Tooltip />
                    <Line type="monotone" dataKey="weight" stroke="#9c27b0" strokeWidth={3} dot={{ r: 5 }} activeDot={{ r: 8 }}/>
                  </LineChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>

            {/* --- Panel Calories --- */}
            <Card sx={{ borderRadius: 4, boxShadow: 3 }}>
              <CardContent sx={{ p: 3 }}>
                 <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                  <Box>
                    <Typography variant="h6" fontWeight="600">üî• Th·ªëng k√™ Calories</Typography>
                    <Typography variant="body2" color="text.secondary">L∆∞·ª£ng calo ti√™u hao trong tu·∫ßn</Typography>
                  </Box>
                   <Box textAlign="right">
                    <Typography variant="h4" fontWeight="bold" color="primary.main">560 kcal</Typography>
                    <Typography variant="body2" color="text.secondary">H√¥m nay</Typography>
                  </Box>
                </Box>
                <ResponsiveContainer width="100%" height={250}>
                  <BarChart data={calorieData}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="day" />
                    <YAxis />
                    <Tooltip cursor={{fill: 'rgba(25, 118, 210, 0.1)'}}/>
                    <Bar dataKey="calo" fill="#1976d2" radius={[6, 6, 0, 0]} />
                  </BarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </Stack>
        </Grid>

        {/* === C·ªôt ph·ª• b√™n ph·∫£i (30% chi·ªÅu r·ªông) === */}
        <Grid size={{ xs: 12, lg: 4 }}>
          <Stack spacing={3}>
            {/* --- Panel Ch·ªâ s·ªë kh√°c --- */}
            <Card sx={{ borderRadius: 4, boxShadow: 3 }}>
              <CardContent>
                <Typography variant="h6" fontWeight="600" mb={2}>Ch·ªâ s·ªë kh√°c</Typography>
                <Stack spacing={2}>
                  <Box display="flex" alignItems="center">
                    <FitnessCenterIcon color="success" sx={{ mr: 1.5 }}/>
                    <Typography>M·ª° c∆° th·ªÉ: <strong>18.2%</strong></Typography>
                  </Box>
                  <Box display="flex" alignItems="center">
                    <MonitorWeightIcon color="warning" sx={{ mr: 1.5 }}/>
                    <Typography>Bu·ªïi ƒë√£ t·∫≠p: <strong>4/5 bu·ªïi</strong></Typography>
                  </Box>
                </Stack>
              </CardContent>
            </Card>

            {/* --- Panel ƒê√°nh gi√° --- */}
            <Card sx={{ borderRadius: 4, boxShadow: 3, p: 1 }}>
              <CardContent>
                <Typography variant="h6" mb={2} fontWeight="600">üß† ƒê√°nh gi√° tu·∫ßn n√†y</Typography>
                <Typography variant="body2" color="text.secondary" mb={2}>
                  Ph·∫£n h·ªìi c·ªßa b·∫°n gi√∫p AI ƒëi·ªÅu ch·ªânh k·∫ø ho·∫°ch cho tu·∫ßn t·ªõi ph√π h·ª£p h∆°n.
                </Typography>
                <ToggleButtonGroup
                  color="primary"
                  value={difficulty}
                  exclusive
                  onChange={(e, newVal) => setDifficulty(newVal)}
                  fullWidth
                >
                  <ToggleButton value="easy">D·ªÖ</ToggleButton>
                  <ToggleButton value="medium">V·ª´a s·ª©c</ToggleButton>
                  <ToggleButton value="hard">Kh√≥</ToggleButton>
                </ToggleButtonGroup>
                <Button variant="contained" onClick={handleSubmit} disabled={!difficulty} sx={{ mt: 2 }} fullWidth>
                  G·ª≠i ƒë√°nh gi√°
                </Button>
              </CardContent>
            </Card>
          </Stack>
        </Grid>
      </Grid>
      
      {/* --- Snackbar th√¥ng b√°o --- */}
      <Snackbar open={openSnackbar} autoHideDuration={4000} onClose={() => setOpenSnackbar(false)}>
        <Alert severity="success" sx={{ width: "100%", borderRadius: 2, boxShadow: 6 }}>
          ü§ñ C·∫£m ∆°n b·∫°n! K·∫ø ho·∫°ch tu·∫ßn sau s·∫Ω ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh.
        </Alert>
      </Snackbar>
    </Box>
  );
};

export default Process;